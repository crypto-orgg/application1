name: Docker Build and Deploy
on:
#  push:
 #   branches: [ main, master ]
 # pull_request:
 #   branches: [ main, master ]
  workflow_dispatch:  # Allows manual triggering
jobs:
  build:
    runs-on: ubuntu-latest-crypto # specify runner
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker prerequisites
        run: |
          # Install iptables and other required dependencies
          sudo dnf install -y iptables iptables-nft iptables-legacy
          sudo dnf install -y device-mapper-persistent-data lvm2

      - name: Install Docker permanently on EC2
        run: |
          # Install Docker permanently if not already installed
          if ! command -v docker &> /dev/null; then
            sudo yum install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker ec2-user
            echo "Docker installed permanently on the EC2 instance"
          else
            echo "Docker is already installed"
          fi
          # Verify Docker installation
          docker --version

      - name: Install Docker Compose permanently
        run: |
          # Check if docker-compose exists and install if needed
          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.15.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
            echo "Docker Compose installed permanently"
          else
            echo "Docker Compose is already installed"
          fi
          # Verify installation
          docker-compose --version

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          # Navigate to application directory if needed
          cd /home/ec2-user/application1
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/my-docker-image-from-ci-cd-1:latest .

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-docker-image-from-ci-cd-1:latest

      - name: Deploy via Docker Compose
        run: |
          # Navigate to the deployments directory where docker-compose.yml is stored
          cd /home/ec2-user/deployments
          
          # Set environment variables for docker-compose
          export DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
          
          # Pull the latest images
          docker-compose pull
          
          # Restart the services with the new images
          docker-compose up -d
